.\"	$Id$
.\"
.\" Copyright (c) 2014, 2017 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KCGIXML 3
.Os
.Sh NAME
.Nm kcgixml ,
.Nm kxml_close ,
.Nm kxml_open ,
.Nm kxml_push ,
.Nm kxml_pushattrs ,
.Nm kxml_pushnull ,
.Nm kxml_pushnullattrs ,
.Nm kxml_pop ,
.Nm kxml_popall ,
.Nm kxml_prologue ,
.Nm kxml_putc ,
.Nm kxml_puts ,
.Nm kxml_write
.Nd XML output for kcgi
.Sh LIBRARY
.Lb libkcgixml
.Sh SYNOPSIS
.In sys/types.h
.In stdarg.h
.In stdint.h
.In kcgi.h
.In kcgixml.h
.Ft enum kcgi_xml
.Fo kxml_close
.Fa "struct kxmlreq *xml"
.Fc
.Ft enum kcgi_xml
.Fo kxml_open
.Fa "struct kxmlreq *xml"
.Fa "struct kreq *req"
.Fa "const char *const *elems"
.Fa "size_t elemsz"
.Fc
.Ft enum kcgi_xml
.Fo kxml_push
.Fa "struct kxmlreq *xml"
.Fa "size_t elem"
.Fc
.Ft enum kcgi_xml
.Fo kxml_pushattrs
.Fa "struct kxmlreq *xml"
.Fa "size_t elem"
.Fa "..."
.Fc
.Ft enum kcgi_xml
.Fo kxml_pushnull
.Fa "struct kxmlreq *xml"
.Fa "size_t elem"
.Fc
.Ft enum kcgi_xml
.Fo kxml_pushnullattrs
.Fa "struct kxmlreq *xml"
.Fa "size_t elem"
.Fa "..."
.Fc
.Ft enum kcgi_xml
.Fo kxml_pop
.Fa "struct kxmlreq *xml"
.Fc
.Ft enum kcgi_xml
.Fo kxml_popall
.Fa "struct kxmlreq *xml"
.Fc
.Ft enum kcgi_xml
.Fo kxml_prologue
.Fa "struct kxmlreq *xml"
.Fc
.Ft enum kcgi_xml
.Fo kxml_putc
.Fa "struct kxmlreq *xml"
.Fa "char c"
.Fc
.Ft enum kcgi_xml
.Fo kxml_puts
.Fa "struct kxmlreq *xml"
.Fa "const char *cp"
.Fc
.Ft enum kcgi_xml
.Fo kxml_write
.Fa "const char *cp"
.Fa "size_t sz"
.Fa "void *arg"
.Fc
.Sh DESCRIPTION
The
.Nm kcgixml
functions support output of XML nodes in a
.Xr kcgi 3
.Fa req
allocated with
.Xr khttp_parse 3 .
Only
.Fn kxml_open
and
.Fn kxml_close
may be called before
.Xr khttp_body 3 .
.Pp
All
.Nm kcgixml
sequences begin with
.Fn kxml_open ,
emit the standard XML prologue with
.Fn kxml_prologue ,
create XML nodes, and end with
.Fn kxml_close .
An array of possible elements
.Fa elems
is passed to
.Fn kxml_open .
This is later indexed into with
.Fn kxml_push ,
.Fn kxml_pushnull ,
.Fn kxml_pushattrs ,
and
.Fn kxml_pushnullattrs
to open elements.
The
.Fn kxml_pop
family closes out opened elements.
.Pp
To compile and link, use
.Xr pkg-config 1
as follows:
.Bd -literal
% cc `pkg-config --cflags kcgi-xml` -c -o sample.o sample.c
% cc -o sample sample.o `pkg-config --libs kcgi-xml`
.Ed
.Bl -tag -width Ds
.It Fn kxml_close
Closes the context opened by
.Fn kxml_open ,
popping all open tags in doing so.
After being called, the
.Ft struct kcgixml
may no longer be used.
.It Fn kxml_open
Open an XML context, binding it to
.Fa elems ,
a set of elements (e.g.,
.Qq DAV:set
or
.Qq html ) ,
the number of elements
.Fa elemsz ,
the
.Xr kcgi 3
request object
.Fa req ,
and an output object
.Fa xml .
The context is closed by
.Fn kxml_close .
.It Fn kxml_push
Push the element-open tag indexed by
.Fn elem
onto the output stream.
.It Fn kxml_pushattrs
Push the element-open tag indexed by
.Fn elem
onto the output stream, as well as a sequence of NUL-terminated pairs of
attributes.
The last attribute key must be a
.Dv NULL
to terminate the list.
.It Fn kxml_pushnull
Like
.Fn kxml_push ,
but producing an empty-element tag.
.It Fn kxml_pushnullattrs
Like
.Fn kxml_pushattrs ,
but producing an empty-element tag.
.It Fn kxml_pop
Pop the current open tag as opened by
.Fn kxml_push
or
.Fn kxml_pushattrs .
.It Fn kxml_popall
Pop all open tags.
.It Fn kxml_putc
Write a single character within the currently-open tag, escaping it
properly as opaque text.
.It Fn kxml_prologue
Emit the XML document prologue.
This should only be called once.
.It Fn kxml_puts
Invokes
.Fn kxml_putc
for all characters in the NUL-terminated string.
.It Fn kxml_write
Invokes
.Fn kxml_putc
for all elements in the bounded buffer.
.El
.Sh RETURN VALUES
All functions inherit return values from
.Xr khttp_write 3 .
Some functions additionally return the
.Dv KCGI_FORM
code to indicate that the maximum number of scopes has already been opened.
.Sh STANDARDS
The
.Nm kcgixml
functions conform to the XML 1.0 mark-up specification.
.Sh AUTHORS
The
.Nm
library was written by
.An Kristaps Dzonsons Aq Mt kristaps@bsd.lv .
.Sh CAVEATS
The current hard-coded limit of nested scopes is 128 levels.
